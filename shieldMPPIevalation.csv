whole_time,opt_step_count,collison_count,oneLoop,oneOpt,Avg.Speed,Max.Speed
126.40225601196289,2292,0,55.14932687786029,31.810795657505746,0.01801688,0.038408823,dt=0.07
95.09540128707886,1678,0,56.67187275278412,32.58050681581373,0.023842722,0.07649322,dt=0.1
88.8938901424408,1616,1,55.008596713,31.74764390038972,0.0236361,0.06522146,dt=0.1
90.13021087646484,1631,0,55.260706795716416,31.941493693339464,0.024737114,0.06416319
76.10800862312317,1373,0,55.43190792192097,31.923014320601364,0.028308306,0.0753232,dt=0.11
82.13314723968506,1475,0,55.683490623862056,31.744578733282577,0.027315998,0.07656314,dt=0.12
77.24427127838135,1349,1,57.260394891692236,32.921120181977976,0.028031822,0.078229025
75.50856184959412,1314,1,57.464659667631985,32.99444904791891,0.028945109,0.08294843,dt=0.12
77.56896662712097,1456,0,53.275390149472834,31.80966043210292,0.028869,0.08999984,dt=0.15
问题是好像再快都可以完成这种任务呀
59.73876714706421,1098,0,54.40689262362343,31.426840792588195,0.03219411,0.08174173,dt=0.12,PPV
这是PPV跑出来的效果 明显好于并行MPPI呀. 那么并行MPPI的使用场景到底在什么地方呢?
